<!-- Navbar -->
<%= simple_form_for @jam do |f| %>

<div class="new-container">

  <!-- Image upload -->
  <div class="wrapper photo-wrapper">
    <div class="photo_submit-container">
        <div class="photo_submit-container">
          <%= f.input :photo %>
          <%= f.input :photo_cache, as: :hidden %>
      </div>
    </div>
  </div>

  <!-- Information upload -->
  <div class="input-information">

    <div class="col-3 input-effect dynamic-form">
      <%= f.input :description, input_html: {class: 'effect-16'} %>
      <span class="focus-border"></span>
    </div>

    <div class="col-3 input-effect dynamic-form">
      <%= f.input :price, input_html: {class: 'effect-16'} %>
      <span class="focus-border"></span>
    </div>

    <div class="col-3 input-effect dynamic-form">
      <%= f.input :category, input_html: {class: 'effect-16'} %>
      <span class="focus-border"></span>
    </div>

    <div class="col-3 input-effect dynamic-form">
      <%= f.input :address, input_html: {class: 'effect-16'} %>
      <span class="focus-border"></span>
    </div>

  <div class="button-div">
    <%= f.submit 'Submit', input_html: {class: 'btn btn-danger'} %>
  </div>




</div>

<% end %>







<% content_for(:after_js) do %>
  <%= javascript_tag do %>

    $(window).load(function(){
      $(".col-3 input").val("");

      $(".input-effect input").focusout(function(){
        if($(this).val() != ""){
          $(this).addClass("has-content");
        }else{
          $(this).removeClass("has-content");
        }
      })
    });

  <% end %>
<% end %>

<% content_for(:after_js) do %>
  <%= javascript_tag do %>

    class PhotoSubmission {
        constructor() {
            const inputs = document.querySelectorAll('.js-photo_submit-input');

            for (var i = 0; i < inputs.length; i++) {
                inputs[i].addEventListener('change', this.uploadImage);
            }
        }

        uploadImage(e) {
            const fileInput = e.target;
            const uploadBtn = e.target.parentNode;
            const deleteBtn = e.target.parentNode.childNodes[7];

            const reader = new FileReader();

            reader.onload = function(e) {
                uploadBtn.setAttribute('style', `background-image: url('${e.target.result}');`);
                uploadBtn.classList.add('photo_submit--image');
                fileInput.setAttribute('disabled', 'disabled');
            };

            reader.readAsDataURL(e.target.files[0]);

            deleteBtn.addEventListener('click', () => {
                uploadBtn.removeAttribute('style');
                uploadBtn.classList.remove('photo_submit--image');

                setTimeout(() => {
                    fileInput.removeAttribute('disabled', 'disabled');
                }, 200);
            });
        }
    };

    new PhotoSubmission;

  <% end %>
<% end %>







